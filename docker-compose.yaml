# SPDX-License-Identifier: LGPL-2.1-or-later
#
# Copyright (C) 2021, 2022 Collabora Limited
# Author: Guillaume Tucker <guillaume.tucker@collabora.com>
# Author: Jeny Sadadia <jeny.sadadia@collabora.com>

x-config-arg: &config-arg
  --yaml-config=/home/kernelci/config

x-setting-arg: &setting-arg
  --settings=${KCI_SETTINGS:-/home/kernelci/config/kernelci.toml}

services:

  monitor: &base-service
    container_name: 'kernelci-pipeline-monitor'
    image: 'local/staging-kernelci:pipeline'
    env_file: ['.env']
    stop_signal: 'SIGINT'
    command:
      - './src/monitor.py'
      - *config-arg
      - *setting-arg
      - 'run'
    volumes:
      - './config:/home/kernelci/config'
      - './logs:/home/kernelci/logs'
    restart: on-failure

  scheduler: &scheduler
    <<: *base-service
    container_name: 'kernelci-pipeline-scheduler'
    command:
      - './src/scheduler.py'
      - *config-arg
      - *setting-arg
      - 'loop'
      - '--runtimes=shell'
      - '--name=scheduler'
    volumes:
      - './config:/home/kernelci/config'
      - './data/output:/home/kernelci/data/output'
      - './data/k8s-credentials/.kube:/home/kernelci/.kube'
      - './data/k8s-credentials/.config/gcloud:/home/kernelci/.config/gcloud'
      - './data/k8s-credentials/.azure:/home/kernelci/.azure'
      - './logs:/home/kernelci/logs'

  scheduler-docker:
    <<: *scheduler
    container_name: 'kernelci-pipeline-scheduler-docker'
    user: root  # Docker-in-Docker
    #working_dir: /home/kernelci
    command:
      - './src/scheduler.py'
      - *config-arg
      - *setting-arg
      - 'loop'
      - '--runtimes=docker'
      - '--name=scheduler_docker'
    volumes:
      - './config:/home/kernelci/config'
      - './data/output:/home/kernelci/data/output'
      - './.docker-env:/home/kernelci/.docker-env'
      - '/var/run/docker.sock:/var/run/docker.sock'  # Docker-in-Docker
      - './logs:/home/kernelci/logs'

  scheduler-lava:
    <<: *scheduler
    container_name: 'kernelci-pipeline-scheduler-lava'
    command:
      - './src/scheduler.py'
      - *config-arg
      - *setting-arg
      - 'loop'
      - '--name=scheduler_lava'
      - '--runtimes'
      - 'lava-local'
    extra_hosts:
      - "lava-master-local:host-gateway"

  tarball:
    <<: *base-service
    container_name: 'kernelci-pipeline-tarball'
    command:
      - './src/tarball.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--name=tarball'
    volumes:
      - './config:/home/kernelci/config'
      - './data/ssh:/home/kernelci/data/ssh'
      - './data/src:/home/kernelci/data/src'
      - './data/output:/home/kernelci/data/output'
      - './logs:/home/kernelci/logs'

  trigger:
    <<: *base-service
    container_name: 'kernelci-pipeline-trigger'
    command:
      - './src/trigger.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--trees=kernelci,netdev-testing'
      - '--name=trigger'

  timeout:
    <<: *base-service
    container_name: 'kernelci-pipeline-timeout'
    command:
      - './src/timeout.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--mode=timeout'

  timeout-closing:
    <<: *base-service
    container_name: 'kernelci-pipeline-closing'
    command:
      - './src/timeout.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--mode=closing'

  timeout-holdoff:
    <<: *base-service
    container_name: 'kernelci-pipeline-holdoff'
    command:
      - './src/timeout.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--mode=holdoff'

  patchset:
    <<: *base-service
    container_name: 'kernelci-pipeline-patchset'
    command:
      - './src/patchset.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--name=patchset'
    volumes:
      - './config:/home/kernelci/config'
      - './data/ssh:/home/kernelci/data/ssh'
      - './data/src:/home/kernelci/data/src'
      - './data/output:/home/kernelci/data/output'
      - './logs:/home/kernelci/logs'

  lava-callback:
    <<: *base-service
    container_name: 'kernelci-pipeline-lava-callback'
    image: 'local/staging-kernelci:lava-callback'
    ports:
      - '${LAVA_CALLBACK_PORT:-8100}:8000'
    # With Werkzeug development server, not suitable for a public instance
    command:
      - 'uvicorn'
      - 'lava_callback:app'
      - '--host'
      - '0.0.0.0'
      - '--port'
      - '8000'
      - '--app-dir'
      - '/home/kernelci/src/'
      # - *config-arg
      # - *setting-arg
    volumes:
      - './config:/home/kernelci/config'
      - './data/ssh:/home/kernelci/data/ssh'
    extra_hosts:
      - "master1:host-gateway"
      - "lab-slave-local:host-gateway"

  kcidb:
    <<: *base-service
    container_name: 'kernelci-pipeline-kcidb'
    command:
      - './src/send_kcidb.py'
      - *config-arg
      - *setting-arg
      - 'run'
      - '--name=pipeline_kcidb'
    volumes:
      - './config:/home/kernelci/config'
      - './data/kcidb:/home/kernelci/data/kcidb'
      - './logs:/home/kernelci/logs'

  postgres:
    container_name: 'kernelci-pipeline-postgres-proxy'
    image: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy:latest'
    command:
      - 'kernelci-production:us-central1:postgresql2'
      - '-c/home/kernelci/data/kcidb/kernelci-production-ci-kernelci.json'
      - '-a0.0.0.0'
    volumes:
      - './data/kcidb:/home/kernelci/data/kcidb'
